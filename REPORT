RAY TRACER REPORT

    On the first day, we spent probably 30 minutes or so going over the source code and familiarizing ourselves with the format of the different files. We completed the majority of the work on both parts of the assignment through pair programming. We used github for version control, as we wanted to be able to work on the code from our different accounts. We did the various tasks in what we thought was the most logical order, first we got rays to cast, then we got intersections working. We ran into some trouble getting the colours to work write properly because we weren't setting the colours of rays that didn't intersect to black. We debugged this visually by setting the colour based off of the coordinates of the intersection rather than the object colour, and were then able to figure out what to do. Visual debugging played a large part in the completion of the project, when we added parellelization our image was all scattered and we couldn't fiugre out why, it turned out that we were sharing the for loop indices between processes. We figured this out by setting the colour of our image to something dependant on these indices and when our image was still scrambled we knew the cause.
    Once we had our shading model working, adding global reflection, and shadows was pretty trivial, in fact getting our ray tracer working and rendering the basic scene was probably one of the hardest parts of the assignment. This assignment was great for making us reason about 3D space in terms of vectors and shapes, a lot of our discussions were 50% handwaving. Fiddling with the shading paramters of the different objects was great for getting a good understanding of the phong model. Trevor came up with the idea for a 360 degree scene using an image sphere rather than an image plane. Implementhing this was actually really trivial because you just had to use spherical co-ordinates instead of mapping to a plane. Trevor did the majority of the typing, Gavin was mainly in the backseat catching bugs and typos, as well as helping keep track of where everything should be. Gavin is very smart boy and was great for keeping the linear algebra in check. Gavin added cylinders, and Trevor added cones. Gavin wrote the code for DoF and refraction - don't forget Trevor wrote the rest ;). We both thought this was literally our favourite assignment out of the entirety of our university careers.
